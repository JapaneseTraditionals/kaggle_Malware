import pandas as pd
from pathlib import Path
from exceptions import IrregularValidationFileException


def load_validation():
    """
    validation_file = Path(__file__).absolute().parents[1] / "data" / "validations" / "01.csv.gz"
    validate_df = pd.read_csv(validation_file, compression="gzip")
    __validation_file_checker(validate_df)
    valid_list = []
    fold_list = sorted(list(validate_df["validate"].unique()))
    for fold_ in fold_list:
        trn_ = validate_df.query('validate != @fold_')["MachineIdentifier"].values.tolist()
        val_ = validate_df.query('validate == @fold_')["MachineIdentifier"].values.tolist()
        valid_list.append((trn_, val_))
    """
    valid_list = [([1, 2]), ([3, 4])]
    return valid_list


def __validation_file_checker(validate_df):
    is_error = False

    if set(validate_df.columns) != set(["MachineIdentifier", "validate"]):
        is_error = True

    if is_error:
        raise IrregularValidationFileException


if __name__ == "__main__":
    for fold_, (trn_, val_) in enumerate(load_validation()):
        print(fold_)
        print("trn_{}".format(len(trn_)))
        print("val_{}".format(len(val_)))
