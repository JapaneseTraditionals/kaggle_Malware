from module.feature_extractor import FeatureExtractor
from module.import_libs import *
from module.save_log import *
from module.use_lgbm import fit_train, predict_test

ROOT_PATH = Path(__file__).absolute().parents[3]

@stop_watch
def process_train(feature_map, lgbm_params, input_path, feature_type):
    df = FeatureExtractor.extract(feature_map, input_path, feature_type, is_train=True)
    clf = fit_train(df, lgbm_params)
    validity = 0
    return validity, clf


@stop_watch
def process_test(feature_map, clf, input_path, feature_type):
    df = FeatureExtractor.extract(feature_map, input_path, feature_type, is_train=False)
    submit = predict_test(df, clf)
    return submit


def process(args, feature_map, lgbm_params,
            input_path=ROOT_PATH / "input", feature_type="neutral"):
    validity, clf = process_train(feature_map, lgbm_params,
                                  input_path=input_path,
                                  feature_type=feature_type)
    predict = None
    if not args.dontPredict:
        predict = process_test(feature_map, clf,
                               input_path=input_path,
                               feature_type=feature_type)
    return validity, predict
