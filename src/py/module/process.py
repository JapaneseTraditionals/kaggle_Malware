from pathlib import Path
from module.feature_extractor import FeatureExtractor
from module.import_libs import *
from module.save_log import stop_watch
from module.use_lgbm import fit_train, predict_test

ROOT_PATH = Path(__file__).absolute().parents[3]


@stop_watch
def process_train(feature_map, lgbm_params, input_path, feature_type):
    """
    Processing of train
    1. Feature Extraction
    2. Fitting train data with lgbm
    ---
    Parameters
    feature_map: feature_map from main
    lgbm_params: feature_map from main
    [optional] input_path: file path of input files.
    You'd better use this parameter when you want to split datasets.
    [optional] feature_type: type_name of features.
    This should be used when you want to change the definition of groups.
    ---
    Return
    validity: validation output of this process
    clf: classifier obtained by lgbm
    """
    df = FeatureExtractor.extract(feature_map, input_path, feature_type,
                                  is_train=True)
    clf = fit_train(df, lgbm_params)
    validity = 0
    return validity, clf


@stop_watch
def process_test(feature_map, clf, input_path, feature_type):
    """
    Processing of test
    1. Feature Extraction
    2. Predict test data with classifier obtained from process_train()
    ---
    Parameters
    feature_map: feature_map from main
    clf: classifier obtained by lgbm
    [optional] input_path: file path of input files.
    You'd better use this parameter when you want to split datasets.
    [optional] feature_type: type_name of features.
    This should be used when you want to change the definition of groups.
    """
    df = FeatureExtractor.extract(feature_map, input_path, feature_type,
                                  is_train=False)
    submit = predict_test(df, clf)
    return submit


def process(args, feature_map, lgbm_params,
            input_path=ROOT_PATH / "input", feature_type="default"):
    """
    Processing of train and test
    Test processing is omitted when you use "-np" option.
    (Like: "python src/py/[index].py -np")
    ---
    Parameters
    args: args from main (src/py/[index].py)
    feature_map: feature_map from main
    lgbm_params: feature_map from main
    [optional] input_path: file path of input files.
    You'd better use this parameter when you want to split datasets.
    [optional] feature_type: type_name of features.
    This should be used when you want to change the definition of groups.
    ---
    Returns
    validity: validation output of this process
    predict: prediction of this process
    ---
    Referenes
    Definitions of option commands are written @ src/py/module/get_option.py
    """
    validity, clf = process_train(feature_map, lgbm_params,
                                  input_path=input_path,
                                  feature_type=feature_type)
    predict = None
    if not args.dontPredict:
        predict = process_test(feature_map, clf,
                               input_path=input_path,
                               feature_type=feature_type)
    return validity, predict
