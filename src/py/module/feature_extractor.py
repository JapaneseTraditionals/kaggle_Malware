import importlib
from module.import_libs import *
from module.load_csv import *
from module.save_log import *

ROOT_PATH = Path(__file__).absolute().parents[3]

class FeatureExtractor():
    def exists_group(feature_group_name, feature_type):
        """
        Check whether csv of group exists
        ---
        Parameters
        feature_group_name: e.g.) Location, OS, State
        feature_type: e.g.) neutral, splited_group1
        ---
        Return
        exists -> True
        not exist -> False
        """
        feature_dir_path = ROOT_PATH / "data" / "features" / feature_type
        feature_group_csv = str(feature_dir_path / feature_group_name) + ".csv"
        return Path.exists(Path(feature_group_csv))

    @stop_watch
    def extract(features_map, input_path, feature_type, is_train):
        """
        Extract features for each group
        Concrete implementations are py/module/features/[feature_type]/*.py
        """

        module_path = "module.features." + feature_type
        input_csv_path = get_input_path(input_path, is_train)
        df_list = []
        for group, features in features_map.items():
            group_path = module_path + "." + group
            module = importlib.import_module(group_path)
            group_feature_class = getattr(module, group)
            df = group_feature_class.extract(features)
            df_list.append(df)
        print(df_list)

