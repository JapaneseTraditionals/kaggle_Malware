[INFO] 2019-01-13 00:58:01,429 >>	[START]  Processor.preprocess()
[INFO] 2019-01-13 00:58:01,430 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 00:58:01,440 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 00:58:01,440 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 00:58:01,446 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 00:58:01,447 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 00:58:01,452 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 00:58:01,453 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 00:58:01,458 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 00:58:01,459 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 00:58:01,464 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 00:58:01,465 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 00:58:01,470 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 00:58:01,471 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 00:58:01,477 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 00:58:01,477 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 00:58:01,483 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 00:58:01,483 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 00:58:01,489 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 00:58:01,489 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 00:58:01,494 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 00:58:01,495 >>	[FINISH] Processor.preprocess(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 00:58:01,495 >>	[START]  Processor.train()
[INFO] 2019-01-13 00:58:01,496 >>	[START]  MocoClassifier.train()
[ERROR] 2019-01-13 00:58:01,496 >>	Unexpected Exception Occurred.
Traceback (most recent call last):
  File "src/main.py", line 20, in <module>
    main(get_option())
  File "src/main.py", line 12, in main
    ProcessorFactory.process(args)
  File "/Users/berry/Kaggle/malware/src/processor_factory.py", line 32, in process
    validity, predict = processor.process()
  File "/Users/berry/Kaggle/malware/src/processor.py", line 31, in process
    validity = self.__train(feature_names)
  File "/Users/berry/Kaggle/malware/src/save_log.py", line 83, in wrapper
    result = func(*args, **kargs)
  File "/Users/berry/Kaggle/malware/src/processor.py", line 61, in __train
    self.classifier.train(feature_names)
  File "/Users/berry/Kaggle/malware/src/save_log.py", line 83, in wrapper
    result = func(*args, **kargs)
  File "/Users/berry/Kaggle/malware/src/moco_classifier.py", line 22, in train
    clfs = self.__train_as_classifier_type(train_df)
  File "/Users/berry/Kaggle/malware/src/moco_classifier.py", line 36, in __train_as_classifier_type
    return self.__train_with_lgbm(feature_names)
  File "/Users/berry/Kaggle/malware/src/moco_classifier.py", line 43, in __train_with_lgbm
    assert False
AssertionError
