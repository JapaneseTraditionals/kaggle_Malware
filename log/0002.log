[INFO] 2019-01-13 01:17:51,429 >>	[START]  Processor.preprocess()
[INFO] 2019-01-13 01:17:51,430 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:17:51,442 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:17:51,442 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:17:51,448 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:17:51,449 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:17:51,455 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:17:51,455 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:17:51,461 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:17:51,462 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:17:51,468 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:17:51,468 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:17:51,473 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:17:51,474 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:17:51,480 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:17:51,481 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:17:51,485 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:17:51,486 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:17:51,491 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:17:51,492 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:17:51,497 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:17:51,498 >>	[FINISH] Processor.preprocess(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:17:51,499 >>	[START]  Processor.train()
[INFO] 2019-01-13 01:17:51,499 >>	[START]  MocoClassifier.train()
[ERROR] 2019-01-13 01:17:51,611 >>	Unexpected Exception Occurred.
Traceback (most recent call last):
  File "src/main.py", line 20, in <module>
    main(get_option())
  File "src/main.py", line 12, in main
    ProcessorFactory.process(args)
  File "/Users/berry/Kaggle/malware/src/processor_factory.py", line 32, in process
    validity, predict = processor.process()
  File "/Users/berry/Kaggle/malware/src/processor.py", line 33, in process
    validity = self.__train(feature_names)
  File "/Users/berry/Kaggle/malware/src/save_log.py", line 83, in wrapper
    result = func(*args, **kargs)
  File "/Users/berry/Kaggle/malware/src/processor.py", line 63, in __train
    self.classifier.train(feature_names)
  File "/Users/berry/Kaggle/malware/src/save_log.py", line 83, in wrapper
    result = func(*args, **kargs)
  File "/Users/berry/Kaggle/malware/src/moco_classifier.py", line 23, in train
    clfs = self.__train_as_classifier_type(train_df)
  File "/Users/berry/Kaggle/malware/src/moco_classifier.py", line 58, in __train_as_classifier_type
    return self.__train_with_lgbm(feature_names)
  File "/Users/berry/Kaggle/malware/src/moco_classifier.py", line 69, in __train_with_lgbm
    assert False
AssertionError
