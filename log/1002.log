[INFO] 2019-01-13 14:58:50,205 >>	[START]  Processor.preprocess()
[INFO] 2019-01-13 14:58:50,206 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 14:58:52,233 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:02
[INFO] 2019-01-13 14:58:52,234 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 14:58:52,242 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 14:58:52,243 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 14:58:59,375 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:07
[INFO] 2019-01-13 14:58:59,376 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 14:58:59,389 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 14:58:59,390 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 14:58:59,401 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 14:58:59,402 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 14:59:06,595 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:07
[INFO] 2019-01-13 14:59:06,596 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 14:59:06,605 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 14:59:06,606 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 14:59:06,614 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 14:59:06,615 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 14:59:13,868 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:07
[INFO] 2019-01-13 14:59:13,868 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 14:59:13,877 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 14:59:13,878 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 14:59:13,886 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 14:59:13,887 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 14:59:21,160 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:07
[INFO] 2019-01-13 14:59:21,161 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 14:59:21,169 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 14:59:21,169 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 14:59:21,178 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 14:59:21,179 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 14:59:28,472 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:07
[INFO] 2019-01-13 14:59:28,472 >>	[FINISH] Processor.preprocess(): [elapsed_time] >> 00:00:38
[INFO] 2019-01-13 14:59:28,473 >>	[START]  Processor.train()
[INFO] 2019-01-13 14:59:28,473 >>	[START]  MocoClassifier.train()
[ERROR] 2019-01-13 14:59:28,473 >>	Unexpected Exception Occurred.
Traceback (most recent call last):
  File "src/main.py", line 20, in <module>
    main(get_option())
  File "src/main.py", line 12, in main
    ProcessorFactory.process(args)
  File "/Users/icebee/Project/malware/src/processor_factory.py", line 32, in process
    validity, predict = processor.process()
  File "/Users/icebee/Project/malware/src/processor.py", line 30, in process
    validity = self.__train(feature_names)
  File "/Users/icebee/Project/malware/src/save_log.py", line 83, in wrapper
    result = func(*args, **kargs)
  File "/Users/icebee/Project/malware/src/processor.py", line 58, in __train
    self.classifier.train(feature_names)
  File "/Users/icebee/Project/malware/src/save_log.py", line 83, in wrapper
    result = func(*args, **kargs)
  File "/Users/icebee/Project/malware/src/moco_classifier.py", line 23, in train
    clfs = self.__train_as_classifier_type(feature_names)
  File "/Users/icebee/Project/malware/src/moco_classifier.py", line 63, in __train_as_classifier_type
    return self.__train_with_lgbm(feature_names)
  File "/Users/icebee/Project/malware/src/moco_classifier.py", line 69, in __train_with_lgbm
    mtd_params = self.params["mtd_params"]
KeyError: 'mtd_params'
