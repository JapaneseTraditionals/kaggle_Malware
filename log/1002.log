[INFO] 2019-01-14 11:37:08,464 >>	[START]  Processor.preprocess()
[INFO] 2019-01-14 11:37:08,466 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-14 11:37:08,637 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-14 11:37:08,639 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-14 11:37:08,682 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-14 11:37:08,684 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-14 11:37:08,712 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-14 11:37:08,713 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-14 11:37:08,735 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-14 11:37:08,736 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-14 11:37:08,756 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-14 11:37:08,758 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-14 11:37:08,784 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-14 11:37:08,785 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-14 11:37:08,805 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-14 11:37:08,806 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-14 11:37:08,827 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-14 11:37:08,829 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-14 11:37:08,850 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-14 11:37:08,851 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-14 11:37:08,873 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-14 11:37:08,874 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-14 11:37:08,893 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-14 11:37:08,895 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-14 11:37:08,919 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-14 11:37:08,920 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-14 11:37:08,945 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-14 11:37:08,946 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-14 11:37:08,965 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-14 11:37:08,967 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-14 11:37:08,988 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-14 11:37:08,988 >>	[FINISH] Processor.preprocess(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-14 11:37:08,989 >>	[START]  Processor.train()
[INFO] 2019-01-14 11:37:08,990 >>	[START]  MocoClassifier.train()
[INFO] 2019-01-14 11:37:08,992 >>		 >> 0 folds start
[INFO] 2019-01-14 11:38:13,902 >>		 >> 0 folds finish: [elapsed_time] >> 00:01:04
[INFO] 2019-01-14 11:38:14,178 >>		 >> CV Score (AUC):0.48215436674186274
[INFO] 2019-01-14 11:38:14,219 >>	[FINISH] MocoClassifier.train(): [elapsed_time] >> 00:01:05
[INFO] 2019-01-14 11:38:14,219 >>	[FINISH] Processor.train(): [elapsed_time] >> 00:01:05
[INFO] 2019-01-14 11:38:14,221 >>	[START]  Processor.predict()
[INFO] 2019-01-14 11:38:14,222 >>	[START]  MocoClassifier.predict()
[ERROR] 2019-01-14 11:38:14,222 >>	Unexpected Exception Occurred.
Traceback (most recent call last):
  File "src/main.py", line 20, in <module>
    main(get_option())
  File "src/main.py", line 12, in main
    ProcessorFactory.process(args)
  File "/home/icebee/project/Malware/src/processor_factory.py", line 32, in process
    validity, predict = processor.process()
  File "/home/icebee/project/Malware/src/processor.py", line 32, in process
    predict = self.__predict(feature_names) if need_prediction() else None
  File "/home/icebee/project/Malware/src/save_log.py", line 91, in wrapper
    result = func(*args, **kargs)
  File "/home/icebee/project/Malware/src/processor.py", line 68, in __predict
    submit = self.classifier.predict(feature_names)
  File "/home/icebee/project/Malware/src/save_log.py", line 91, in wrapper
    result = func(*args, **kargs)
  File "/home/icebee/project/Malware/src/moco_classifier.py", line 29, in predict
    assert False
AssertionError
