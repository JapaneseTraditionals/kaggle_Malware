[INFO] 2019-02-17 10:06:45,136 >>	Classifier Type: PYTORCH
[INFO] 2019-02-17 10:06:45,137 >>	Input Path: /home/berry/Malware/data/subset/min
[INFO] 2019-02-17 10:06:45,138 >>	--------------------------------
[INFO] 2019-02-17 10:06:45,139 >>	[START]  Processor.preprocess()
[INFO] 2019-02-17 10:06:45,140 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 10:06:45,159 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 10:06:45,160 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 10:06:45,163 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 10:06:45,164 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 10:06:45,167 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 10:06:45,169 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 10:06:45,171 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 10:06:45,173 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 10:06:45,175 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 10:06:45,177 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 10:06:45,180 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 10:06:45,181 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 10:06:45,184 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 10:06:45,185 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 10:06:45,187 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 10:06:45,189 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 10:06:45,192 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 10:06:45,193 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 10:06:45,196 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 10:06:45,197 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 10:06:45,199 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 10:06:45,201 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 10:06:45,204 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 10:06:45,205 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 10:06:45,207 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 10:06:45,209 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 10:06:45,211 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 10:06:45,213 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 10:06:45,216 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 10:06:45,216 >>	[FINISH] Processor.preprocess(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 10:06:45,218 >>	[START]  Processor.train()
[INFO] 2019-02-17 10:06:45,219 >>	[START]  PyTorchClassifier.train()
[INFO] 2019-02-17 10:06:45,222 >>		 >> 0 folds start
[INFO] 2019-02-17 10:06:45,223 >>		 	 Generating datasets...
[INFO] 2019-02-17 10:06:45,225 >>		 	 	 Reading train_Kernel02.csv...
[INFO] 2019-02-17 10:06:45,254 >>		 	 	 Reading train_Binary.csv...
[INFO] 2019-02-17 10:07:06,410 >>		 	 	 Reading validate_Kernel02.csv...
[INFO] 2019-02-17 10:07:06,426 >>		 	 	 Reading validate_Binary.csv...
[INFO] 2019-02-17 10:07:25,607 >>		 	 Datasets were generated.
[ERROR] 2019-02-17 10:07:29,294 >>	Unexpected Exception Occurred.
Traceback (most recent call last):
  File "src/main.py", line 23, in <module>
    main(get_option())
  File "src/main.py", line 14, in main
    ProcessorFactory.process(args)
  File "/home/berry/Malware/src/processor_factory.py", line 39, in process
    validity, predict = processor.process()
  File "/home/berry/Malware/src/processor.py", line 42, in process
    validity = None if only_prediction() and model_exist() else self.__train(feature_names)
  File "/home/berry/Malware/src/save_log.py", line 112, in wrapper
    result = func(*args, **kargs)
  File "/home/berry/Malware/src/processor.py", line 69, in __train
    return self.classifier.train(feature_names)
  File "/home/berry/Malware/src/save_log.py", line 112, in wrapper
    result = func(*args, **kargs)
  File "/home/berry/Malware/src/classifier/pytorch_classifier.py", line 90, in train
    verbose=self.params["verbose"])
  File "/home/berry/Malware/src/classifier/torch_util.py", line 74, in train_model
    outputs = model(inputs)
  File "/home/berry/.pyenv/versions/3.6.6/lib/python3.6/site-packages/torch/nn/modules/module.py", line 489, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/berry/Malware/src/classifier/pytorch_network/SimpleNet.py", line 19, in forward
    x = self.bn1(x)
  File "/home/berry/.pyenv/versions/3.6.6/lib/python3.6/site-packages/torch/nn/modules/module.py", line 489, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/berry/.pyenv/versions/3.6.6/lib/python3.6/site-packages/torch/nn/modules/batchnorm.py", line 76, in forward
    exponential_average_factor, self.eps)
  File "/home/berry/.pyenv/versions/3.6.6/lib/python3.6/site-packages/torch/nn/functional.py", line 1623, in batch_norm
    training, momentum, eps, torch.backends.cudnn.enabled
RuntimeError: cuDNN error: CUDNN_STATUS_EXECUTION_FAILED
