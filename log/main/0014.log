[INFO] 2019-02-08 02:18:34,479 >>	Classifier Type: PYTORCH
[INFO] 2019-02-08 02:18:34,480 >>	Input Path: /Users/berry/Kaggle/malware/data/subset/min
[INFO] 2019-02-08 02:18:34,481 >>	--------------------------------
[INFO] 2019-02-08 02:18:34,481 >>	[START]  Processor.preprocess()
[INFO] 2019-02-08 02:18:34,482 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-08 02:18:34,529 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-08 02:18:34,530 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-08 02:18:34,533 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-08 02:18:34,534 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-08 02:18:34,537 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-08 02:18:34,538 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-08 02:18:34,540 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-08 02:18:34,542 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-08 02:18:34,545 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-08 02:18:34,546 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-08 02:18:34,548 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-08 02:18:34,550 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-08 02:18:34,553 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-08 02:18:34,553 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-08 02:18:34,556 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-08 02:18:34,558 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-08 02:18:34,560 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-08 02:18:34,561 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-08 02:18:34,564 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-08 02:18:34,566 >>	[FINISH] Processor.preprocess(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-08 02:18:34,567 >>	[START]  Processor.train()
[INFO] 2019-02-08 02:18:34,569 >>	[START]  PyTorchClassifier.train()
[INFO] 2019-02-08 02:18:34,571 >>		 >> 0 folds start
[INFO] 2019-02-08 02:18:34,572 >>		 	 Generating datasets...
[INFO] 2019-02-08 02:18:34,573 >>		 	 	 Reading train_Binary.csv...
[INFO] 2019-02-08 02:19:14,122 >>		 	 	 Reading validate_Binary.csv...
[INFO] 2019-02-08 02:19:55,776 >>		 	 Datasets were generated.
[ERROR] 2019-02-08 02:19:55,821 >>	Unexpected Exception Occurred.
Traceback (most recent call last):
  File "src/main.py", line 23, in <module>
    main(get_option())
  File "src/main.py", line 14, in main
    ProcessorFactory.process(args)
  File "/Users/berry/Kaggle/malware/src/processor_factory.py", line 39, in process
    validity, predict = processor.process()
  File "/Users/berry/Kaggle/malware/src/processor.py", line 42, in process
    validity = None if only_prediction() and model_exist() else self.__train(feature_names)
  File "/Users/berry/Kaggle/malware/src/save_log.py", line 108, in wrapper
    result = func(*args, **kargs)
  File "/Users/berry/Kaggle/malware/src/processor.py", line 69, in __train
    return self.classifier.train(feature_names)
  File "/Users/berry/Kaggle/malware/src/save_log.py", line 108, in wrapper
    result = func(*args, **kargs)
  File "/Users/berry/Kaggle/malware/src/classifier/pytorch_classifier.py", line 78, in train
    for i, data in enumerate(train_loader, 0):
  File "/Users/berry/.pyenv/versions/anaconda3-5.3.1/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 615, in __next__
    batch = self.collate_fn([self.dataset[i] for i in indices])
  File "/Users/berry/.pyenv/versions/anaconda3-5.3.1/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 232, in default_collate
    return [default_collate(samples) for samples in transposed]
  File "/Users/berry/.pyenv/versions/anaconda3-5.3.1/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 232, in <listcomp>
    return [default_collate(samples) for samples in transposed]
  File "/Users/berry/.pyenv/versions/anaconda3-5.3.1/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 218, in default_collate
    return torch.stack([torch.from_numpy(b) for b in batch], 0)
  File "/Users/berry/.pyenv/versions/anaconda3-5.3.1/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 218, in <listcomp>
    return torch.stack([torch.from_numpy(b) for b in batch], 0)
TypeError: can't convert np.ndarray of type numpy.int8. The only supported types are: double, float, float16, int64, int32, and uint8.
