[INFO] 2019-02-15 16:28:06,897 >>	Classifier Type: PYTORCH
[INFO] 2019-02-15 16:28:07,281 >>	Input Path: /home/berry/Malware/data/subset/lgbm_adv
[INFO] 2019-02-15 16:28:07,614 >>	--------------------------------
[INFO] 2019-02-15 16:28:07,968 >>	[START]  Processor.preprocess()
[INFO] 2019-02-15 16:28:08,314 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-15 16:28:09,206 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-15 16:28:09,538 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-15 16:28:10,149 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-15 16:28:10,486 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-15 16:28:11,028 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-15 16:28:11,369 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-15 16:28:12,032 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-15 16:28:12,363 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-15 16:28:12,956 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-15 16:28:13,293 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-15 16:28:13,877 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-15 16:28:14,206 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-15 16:28:14,955 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-15 16:28:15,310 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-15 16:28:15,883 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-15 16:28:16,217 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-15 16:28:16,878 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-15 16:28:17,213 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-15 16:28:17,822 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-15 16:28:18,159 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-15 16:28:18,709 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-15 16:28:19,052 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-15 16:28:19,617 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-15 16:28:19,956 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-15 16:28:20,638 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-15 16:28:20,984 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-15 16:28:21,539 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-15 16:28:21,883 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-15 16:28:22,490 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-15 16:28:22,832 >>	[FINISH] Processor.preprocess(): [elapsed_time] >> 00:00:14
[INFO] 2019-02-15 16:28:23,217 >>	[START]  Processor.train()
[INFO] 2019-02-15 16:28:23,553 >>	[START]  PyTorchClassifier.train()
[INFO] 2019-02-15 16:28:23,964 >>		 >> 0 folds start
[INFO] 2019-02-15 16:28:24,314 >>		 	 Generating datasets...
[INFO] 2019-02-15 16:28:24,799 >>		 	 	 Reading train_Kernel02.csv...
[INFO] 2019-02-15 16:28:35,021 >>		 	 	 Reading train_Kernel01.csv...
[INFO] 2019-02-15 16:29:11,659 >>		 	 	 Reading train_Display.csv...
[INFO] 2019-02-15 16:29:33,965 >>		 	 	 Reading train_OneHotEncoding.csv...
[INFO] 2019-02-15 16:29:56,356 >>		 	 	 Reading train_Os.csv...
[INFO] 2019-02-15 16:30:19,038 >>		 	 	 Reading train_Binary.csv...
[INFO] 2019-02-15 16:30:45,140 >>		 	 	 Reading train_Numerical.csv...
[INFO] 2019-02-15 16:31:10,299 >>		 	 	 Reading train_Categorical.csv...
[INFO] 2019-02-15 16:40:06,089 >>		 	 	 Reading validate_Kernel02.csv...
[INFO] 2019-02-15 16:40:08,939 >>		 	 	 Reading validate_Kernel01.csv...
[INFO] 2019-02-15 16:40:15,733 >>		 	 	 Reading validate_Display.csv...
[INFO] 2019-02-15 16:40:21,215 >>		 	 	 Reading validate_OneHotEncoding.csv...
[INFO] 2019-02-15 16:40:26,423 >>		 	 	 Reading validate_Os.csv...
[INFO] 2019-02-15 16:40:31,576 >>		 	 	 Reading validate_Binary.csv...
[INFO] 2019-02-15 16:40:36,656 >>		 	 	 Reading validate_Numerical.csv...
[INFO] 2019-02-15 16:40:43,573 >>		 	 	 Reading validate_Categorical.csv...
[INFO] 2019-02-15 16:44:35,280 >>		 	 Datasets were generated.
[ERROR] 2019-02-15 16:44:59,786 >>	Unexpected Exception Occurred.
Traceback (most recent call last):
  File "src/main.py", line 23, in <module>
    main(get_option())
  File "src/main.py", line 14, in main
    ProcessorFactory.process(args)
  File "/home/berry/Malware/src/processor_factory.py", line 39, in process
    validity, predict = processor.process()
  File "/home/berry/Malware/src/processor.py", line 42, in process
    validity = None if only_prediction() and model_exist() else self.__train(feature_names)
  File "/home/berry/Malware/src/save_log.py", line 108, in wrapper
    result = func(*args, **kargs)
  File "/home/berry/Malware/src/processor.py", line 69, in __train
    return self.classifier.train(feature_names)
  File "/home/berry/Malware/src/save_log.py", line 108, in wrapper
    result = func(*args, **kargs)
  File "/home/berry/Malware/src/classifier/pytorch_classifier.py", line 86, in train
    early_stopping_rounds=early_stopping_rounds)
  File "/home/berry/Malware/src/classifier/torch_util.py", line 73, in train_model
    outputs = model(inputs)
  File "/home/berry/.pyenv/versions/3.6.6/lib/python3.6/site-packages/torch/nn/modules/module.py", line 489, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/berry/Malware/src/classifier/pytorch_network/SimpleNet.py", line 17, in forward
    x = self.fc1(x)
  File "/home/berry/.pyenv/versions/3.6.6/lib/python3.6/site-packages/torch/nn/modules/module.py", line 489, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/berry/.pyenv/versions/3.6.6/lib/python3.6/site-packages/torch/nn/modules/linear.py", line 67, in forward
    return F.linear(input, self.weight, self.bias)
  File "/home/berry/.pyenv/versions/3.6.6/lib/python3.6/site-packages/torch/nn/functional.py", line 1352, in linear
    ret = torch.addmm(torch.jit._unwrap_optional(bias), input, weight.t())
RuntimeError: size mismatch, m1: [32 x 99], m2: [98 x 100] at /pytorch/aten/src/THC/generic/THCTensorMathBlas.cu:266
