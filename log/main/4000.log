[INFO] 2019-02-17 09:57:18,009 >>	Classifier Type: PYTORCH
[INFO] 2019-02-17 09:57:18,009 >>	Input Path: /home/berry/Malware/data/subset/lgbm_adv
[INFO] 2019-02-17 09:57:18,010 >>	--------------------------------
[INFO] 2019-02-17 09:57:18,011 >>	[START]  Processor.preprocess()
[INFO] 2019-02-17 09:57:18,012 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 09:57:18,028 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 09:57:18,029 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 09:57:18,031 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 09:57:18,033 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 09:57:18,035 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 09:57:18,037 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 09:57:18,038 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 09:57:18,039 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 09:57:18,041 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 09:57:18,043 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 09:57:18,045 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 09:57:18,046 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 09:57:18,048 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 09:57:18,049 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 09:57:18,051 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 09:57:18,052 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 09:57:18,054 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 09:57:18,055 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 09:57:18,057 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 09:57:18,058 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 09:57:18,060 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 09:57:18,062 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 09:57:18,064 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 09:57:18,065 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 09:57:18,067 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 09:57:18,068 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 09:57:18,070 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 09:57:18,071 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-02-17 09:57:18,073 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 09:57:18,074 >>	[FINISH] Processor.preprocess(): [elapsed_time] >> 00:00:00
[INFO] 2019-02-17 09:57:18,075 >>	[START]  Processor.train()
[INFO] 2019-02-17 09:57:18,076 >>	[START]  PyTorchClassifier.train()
[INFO] 2019-02-17 09:57:18,079 >>		 >> 0 folds start
[INFO] 2019-02-17 09:57:18,080 >>		 	 Generating datasets...
[INFO] 2019-02-17 09:57:18,081 >>		 	 	 Reading train_Kernel02.csv...
[INFO] 2019-02-17 09:57:23,492 >>		 	 	 Reading train_Display.csv...
[INFO] 2019-02-17 09:58:05,572 >>		 	 	 Reading validate_Kernel02.csv...
[INFO] 2019-02-17 09:58:07,015 >>		 	 	 Reading validate_Display.csv...
[INFO] 2019-02-17 09:58:35,549 >>		 	 Datasets were generated.
[ERROR] 2019-02-17 09:58:57,206 >>	Unexpected Exception Occurred.
Traceback (most recent call last):
  File "src/main.py", line 23, in <module>
    main(get_option())
  File "src/main.py", line 14, in main
    ProcessorFactory.process(args)
  File "/home/berry/Malware/src/processor_factory.py", line 39, in process
    validity, predict = processor.process()
  File "/home/berry/Malware/src/processor.py", line 42, in process
    validity = None if only_prediction() and model_exist() else self.__train(feature_names)
  File "/home/berry/Malware/src/save_log.py", line 112, in wrapper
    result = func(*args, **kargs)
  File "/home/berry/Malware/src/processor.py", line 69, in __train
    return self.classifier.train(feature_names)
  File "/home/berry/Malware/src/save_log.py", line 112, in wrapper
    result = func(*args, **kargs)
  File "/home/berry/Malware/src/classifier/pytorch_classifier.py", line 90, in train
    verbose=self.params["verbose"])
  File "/home/berry/Malware/src/classifier/torch_util.py", line 74, in train_model
    outputs = model(inputs)
  File "/home/berry/.pyenv/versions/3.6.6/lib/python3.6/site-packages/torch/nn/modules/module.py", line 489, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/berry/Malware/src/classifier/pytorch_network/LeakyNet.py", line 21, in forward
    x = self.bn1(x)
  File "/home/berry/.pyenv/versions/3.6.6/lib/python3.6/site-packages/torch/nn/modules/module.py", line 489, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/berry/.pyenv/versions/3.6.6/lib/python3.6/site-packages/torch/nn/modules/batchnorm.py", line 76, in forward
    exponential_average_factor, self.eps)
  File "/home/berry/.pyenv/versions/3.6.6/lib/python3.6/site-packages/torch/nn/functional.py", line 1623, in batch_norm
    training, momentum, eps, torch.backends.cudnn.enabled
RuntimeError: cuDNN error: CUDNN_STATUS_EXECUTION_FAILED
