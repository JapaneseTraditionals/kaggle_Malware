[INFO] 2019-01-13 01:41:49,383 >>	[START]  Processor.preprocess()
[INFO] 2019-01-13 01:41:49,384 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:41:49,419 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:41:49,420 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:41:49,438 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:41:49,440 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:41:56,445 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:07
[INFO] 2019-01-13 01:41:56,446 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:41:56,465 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:41:56,466 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:41:56,485 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:41:56,486 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:42:06,128 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:09
[INFO] 2019-01-13 01:42:06,129 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:42:06,148 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:42:06,149 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:42:06,166 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:42:06,168 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:42:15,895 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:09
[INFO] 2019-01-13 01:42:15,896 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:42:15,915 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:42:15,916 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:42:15,934 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:42:15,935 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:42:25,626 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:09
[INFO] 2019-01-13 01:42:25,628 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:42:25,647 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:42:25,648 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:42:25,667 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:00
[INFO] 2019-01-13 01:42:25,669 >>	[START]  FeatureExtractor.extract()
[INFO] 2019-01-13 01:42:35,319 >>	[FINISH] FeatureExtractor.extract(): [elapsed_time] >> 00:00:09
[INFO] 2019-01-13 01:42:35,319 >>	[FINISH] Processor.preprocess(): [elapsed_time] >> 00:00:45
[INFO] 2019-01-13 01:42:35,320 >>	[START]  Processor.train()
[INFO] 2019-01-13 01:42:35,321 >>	[START]  MocoClassifier.train()
[ERROR] 2019-01-13 01:42:35,405 >>	Unexpected Exception Occurred.
Traceback (most recent call last):
  File "src/main.py", line 20, in <module>
    main(get_option())
  File "src/main.py", line 12, in main
    ProcessorFactory.process(args)
  File "/home/icebee/project/Malware/src/processor_factory.py", line 32, in process
    validity, predict = processor.process()
  File "/home/icebee/project/Malware/src/processor.py", line 32, in process
    validity = self.__train(feature_names)
  File "/home/icebee/project/Malware/src/save_log.py", line 83, in wrapper
    result = func(*args, **kargs)
  File "/home/icebee/project/Malware/src/processor.py", line 60, in __train
    self.classifier.train(feature_names)
  File "/home/icebee/project/Malware/src/save_log.py", line 83, in wrapper
    result = func(*args, **kargs)
  File "/home/icebee/project/Malware/src/moco_classifier.py", line 22, in train
    clfs = self.__train_as_classifier_type(train_df)
  File "/home/icebee/project/Malware/src/moco_classifier.py", line 57, in __train_as_classifier_type
    return self.__train_with_lgbm(feature_names)
  File "/home/icebee/project/Malware/src/moco_classifier.py", line 67, in __train_with_lgbm
    assert False
AssertionError
