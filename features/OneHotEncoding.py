from features.base_feature import BaseFeature
from exceptions import IrregularExtractArgumentException


class OneHotEncoding(BaseFeature):

    def get_loadcols(self):
        cols = [
            "Platform",
            "AVProductStatesIdentifier",
            "Processor",
            "SmartScreen",
            "Census_PowerPlatformRoleName"
        ]
        return cols

    def extract(self):
        return super().extract()

    def equal(self, df, category=None):
        if len(df.columns) > 2:
            print("too mutch columns. [df.columns : {}]".format(len(df.columns)))
            raise IrregularExtractArgumentException
        feature = df.columns.tolist()[1]
        if category is None:
            df[feature] = ~(df[feature] == df[feature])
        else:
            df[feature] = (df[feature] == category)
        return df
