from features.base_feature import BaseFeature
import pandas as pd
import dask.dataframe as dd
from exceptions import IrregularExtractArgumentException
from features.get_dtype import get_csv_dtype


class Display(BaseFeature):

    def get_loadcols(self):
        cols = [
            "Census_InternalPrimaryDiagonalDisplaySizeInInches",
            "Census_InternalPrimaryDisplayResolutionHorizontal",
            "Census_InternalPrimaryDisplayResolutionVertical"
        ]
        return cols

    def extract(self):
        return super().extract()

    def ResolutionRatio_fillna_mean(self, df):
        """
        Census_InternalPrimaryDisplayResolutionVertical
        """
        part_df = self.load_part()
        part_df["ResolutionRatio"] = part_df["Census_InternalPrimaryDisplayResolutionVertical"] / part_df["Census_InternalPrimaryDisplayResolutionHorizontal"]
        mean = part_df.loc[:, "ResolutionRatio"].mean()
        part_df.fillna(mean, inplace=True)
        return part_df[["MachineIdentifier", "ResolutionRatio"]]

    def ScreenQuality_LabelEncoding(self, df):
        """
        Census_InternalPrimaryDisplayResolutionVertical
        """
        part_df = self.load_part()
        # Nan
        part_df["ScreenQuality"] = 0
        # SD
        part_df.loc[part_df["Census_InternalPrimaryDisplayResolutionVertical"] >= 0, "ScreenQuality"] = 1
        # HD
        part_df.loc[part_df["Census_InternalPrimaryDisplayResolutionVertical"] >= 720, "ScreenQuality"] = 2
        # FullHD
        part_df.loc[part_df["Census_InternalPrimaryDisplayResolutionVertical"] >= 1080, "ScreenQuality"] = 3
        # 4k
        part_df.loc[part_df["Census_InternalPrimaryDisplayResolutionVertical"] >= 2160, "ScreenQuality"] = 4
        return part_df[["MachineIdentifier", "ScreenQuality"]]
